<?xml version="1.0" encoding="UTF-8"?>
<job xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="job.xsd" variablePrefix="%">
	<jobName>Strumento finanziario</jobName>
	<isThread>false</isThread>

	<task>
		<id>6</id>
		<name>TABLE STRUMENTOFINANZIARIO</name>
		<sqlProcess>
			
			<sql><![CDATA[
				/**
				*	LOGIC DELETE.
				*/
				UPDATE STRUMENTOFINANZIARIO SET STATO = 'S'
			]]></sql>
			
			<sql><![CDATA[
				/**
				*	ATTIVA ASSET TYPE
				**/
				update  /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO set stato='A',INDICATORELIQUIDITA=0,COSTI_ENTRATA=0,COSTI_USCITA=0 where codicetitolo in('ALT','ART','ATFL','AZEM','AZEU','AZI','AZWD','IMM','LIQ','AZAL','MNAL','AZINT','MNEU','OBAL','OBCPEU','OBGVEUBR','OBGVEUML','MN','OB','AZ')
			]]></sql>
			<sql><![CDATA[
				COMMIT
			]]></sql>
			
			
			<sql><![CDATA[
				/**
				*	Inserimento in STRUMENTOFINANZIARIO da flusso EDWH
				**/
			
				MERGE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ INTO STRUMENTOFINANZIARIO S
			  USING(SELECT   CODICEBANCA,CODICETITOLO,CODICERISCHIOPROM,DESCRIZIONE,CODICEENTITA,CODICEGRUPPO,CODICESOTTOGRUPPO,DATAEMISSIONE,DATASCADENZA,CODICEESPERIENZA,ILLIQUIDO,COSTIUPFRONT,COSTIDIUSCITA,VAR,UL1Y,LOTTOMINIMO,TITOLOBANCOPOSTA,TIPOLOGIATIT,ISPERIMETROMIFID,IS_IVASS,
			  			IVASSPunteggioNucleo,IVASSPunteggioSitFin,ImpPremPerCOntroSitFinIVASS,codGRIvass,CodiceBisogno,CodiceInterno,LottoMinimoSuccessivo,FlagLottoMultiplo,isin,cdivisatrattazione,facquistabilefe,fvendibilefe,zenteemittente,fconflittointeresse,iprezzoriferimento,dataapertura,
			  			datachiusura,Costosostenibileannuo,codiceSchedaTit,POLR3,RAMOPOL,GMPOL3,GMPOL11,GMPOL12,GMPERR3,prezzodirimborso,
			  			CostoSostenibileAnnuoIVASS,codPaniereTit,tipoPaniereTit,codSottoPaniere,tClimifAmmesso,causalePaniere,dataInizioPaniere,dataFinePaniere,dataInizioQuot,dataProssCed,freqCedola,tassoCedola,indCedolaCert,IndicatoreLiquidita,dprezzoriferimento,DIVISADENOMINAZIONE,IMOLTIPLICATORE,IPREZZORIFERIMENTOEURO
			  			FROM TMP_PFANATIT) T
			  ON(T.CodiceInterno = S.CODICETITOLO)
			  WHEN MATCHED THEN UPDATE SET
			  S.DESCRIZIONE=T.DESCRIZIONE,
			  S.SETTORE=T.IS_IVASS, 
			  S.DATAEMISSIONE_INT=T.DATAEMISSIONE,
			  S.SCADENZA=T.DATASCADENZA,
			  S.CLASSEESPERIENZA=T.CODICEESPERIENZA,
			  S.ILLIQUIDO=T.ILLIQUIDO,
			  S.VAR=T.VAR,
			  S.UL1Y=T.UL1Y/100,
			  S.STATO='A',
			  S.MACROTIPOLOGIA=T.CODICEENTITA,
			  S.SOTTOTIPOLOGIA_1=T.CODICEGRUPPO,
			  S.SOTTOTIPOLOGIA_2=T.CODICESOTTOGRUPPO,
			  S.LOTTOMIN=CASE WHEN T.IPREZZORIFERIMENTOEURO<>0 THEN T.LOTTOMINIMO*T.IPREZZORIFERIMENTOEURO*T.IMOLTIPLICATORE
    					 WHEN T.IPREZZORIFERIMENTO<>0 THEN T.LOTTOMINIMO*T.IPREZZORIFERIMENTO*T.IMOLTIPLICATORE ELSE 
    					 T.LOTTOMINIMO END,
			  S.LOTTOMINSUCC=CASE WHEN T.IPREZZORIFERIMENTOEURO<>0 THEN T.LottoMinimoSuccessivo*T.IPREZZORIFERIMENTOEURO*T.IMOLTIPLICATORE
    					 WHEN T.IPREZZORIFERIMENTO<>0 THEN T.LottoMinimoSuccessivo*T.IPREZZORIFERIMENTO*T.IMOLTIPLICATORE ELSE 
    					 T.LottoMinimoSuccessivo END,
			  S.MODVERS=T.FlagLottoMultiplo,
			  S.CODICECOMPARTO=T.TIPOLOGIATIT,
			  S.DIVISATRATTAZIONE=T.cdivisatrattazione,
			  S.IS_BAILIN=T.CodiceBisogno,
			  S.STARTDATE=T.dataapertura,
			  S.DATACHIUSURA=NVL(T.datachiusura,21991231),
			  S.EMITTENTE=T.ZENTEEMITTENTE,
			  S.COSTI_ENTRATA=T.COSTIUPFRONT,
			  S.COSTI_USCITA=T.COSTIDIUSCITA,
			  S.DATACED=T.dataProssCed,
			  S.FREQ_CEDOLA=T.freqCedola,
			  S.RATEO_CEDOLARE=T.tassoCedola,
			  S.F_ACQUISTABILE= CASE WHEN T.facquistabilefe='9' THEN 'N' ELSE 'S' END,
			  S.F_VENDIBILE=CASE WHEN T.fvendibilefe='9' THEN 'N' ELSE 'S' END,
			  S.COD_PANIERE=T.codPaniereTit,
			  S.SOTTO_PANIERE=T.tipoPaniereTit,
			  S.COD_SOTTO_PANIERE=T.codSottoPaniere,
			  S.CAUSALE_PANIERE= T.causalePaniere,
			  S.INDICATORELIQUIDITA=T.INDICATORELIQUIDITA,
			  S.costo_fisso=T.Costosostenibileannuo,
			  S.TIPOCEDOLA=T.indCedolaCert,
			  S.RAMOPOL=T.RAMOPOL,
			  S.POLR3=T.POLR3,
			  S.GMPERR3=T.GMPERR3,
			  S.PREZZOEMI=T.iprezzoriferimento,
			  S.DATAAGGIORNAMENTO=T.dprezzoriferimento,
			  S.DATAULTIMOPREZZO=T.dprezzoriferimento,
			  S.GMPOL3=T.GMPOL3,
			  S.GMPOL11=T.GMPOL11,
			  S.GMPOL12=T.GMPOL12,
			  S.DIVISAEMISSIONE = T.DIVISADENOMINAZIONE,
			  S.CAPITALIZZAZIONEEURO=T.prezzodirimborso,
			  S.ISIN=T.CODICERISCHIOPROM,
			  S.IS_BFPINDEXED=T.ISPERIMETROMIFID,
			  S.F_PRIIP=CASE WHEN T.codiceSchedaTit='1' then '1' else '0' END 
			  WHEN NOT MATCHED THEN INSERT (S.CODICEBANCA,S.CODICETITOLO,S.ISIN,S.DESCRIZIONE,S.SETTORE,S.DATAEMISSIONE_INT,S.SCADENZA,S.CLASSEESPERIENZA,S.ILLIQUIDO,S.VAR,S.STATO,S.MACROTIPOLOGIA,S.SOTTOTIPOLOGIA_1,S.SOTTOTIPOLOGIA_2,S.UL1Y,S.LOTTOMIN,S.LOTTOMINSUCC,S.MODVERS,S.CODICECOMPARTO,S.DIVISATRATTAZIONE,S.IS_BAILIN,S.STARTDATE,S.EMITTENTE,COSTI_ENTRATA,COSTI_USCITA,DATACED,FREQ_CEDOLA,RATEO_CEDOLARE,F_ACQUISTABILE,F_VENDIBILE,COD_PANIERE,SOTTO_PANIERE,COD_SOTTO_PANIERE,CAUSALE_PANIERE,DATACHIUSURA,INDICATORELIQUIDITA,costo_fisso,TIPOCEDOLA,RAMOPOL,POLR3,GMPERR3,PREZZOEMI,DATAAGGIORNAMENTO,GMPOL3,GMPOL11,DIVISAEMISSIONE,S.GMPOL12,DATAULTIMOPREZZO,CAPITALIZZAZIONEEURO)
			  VALUES(T.CODICEBANCA,T.CodiceInterno,T.CODICERISCHIOPROM,T.DESCRIZIONE,T.IS_IVASS,T.DATAEMISSIONE,T.DATASCADENZA,T.CODICEESPERIENZA,T.ILLIQUIDO,T.VAR,'A',T.CODICEENTITA,T.CODICEGRUPPO,T.CODICESOTTOGRUPPO,T.UL1Y,CASE WHEN T.IPREZZORIFERIMENTOEURO<>0 THEN T.LOTTOMINIMO*T.IPREZZORIFERIMENTOEURO*T.IMOLTIPLICATORE
    					 WHEN T.IPREZZORIFERIMENTO<>0 THEN T.LOTTOMINIMO*T.IPREZZORIFERIMENTO*T.IMOLTIPLICATORE ELSE 
    					 T.LOTTOMINIMO END,
    					 CASE WHEN T.IPREZZORIFERIMENTOEURO<>0 THEN T.LottoMinimoSuccessivo*T.IPREZZORIFERIMENTOEURO*T.IMOLTIPLICATORE
    					 WHEN T.IPREZZORIFERIMENTO<>0 THEN T.LottoMinimoSuccessivo*T.IPREZZORIFERIMENTO*T.IMOLTIPLICATORE ELSE 
    					 T.LottoMinimoSuccessivo END,T.FlagLottoMultiplo,T.TIPOLOGIATIT,T.cdivisatrattazione,T.CodiceBisogno,T.dataapertura,T.ZENTEEMITTENTE,T.COSTIUPFRONT,T.COSTIDIUSCITA,T.dataProssCed,T.freqCedola,T.tassoCedola,
    					 CASE WHEN facquistabilefe='9' THEN 'N' ELSE 'S' END,
    					 CASE WHEN fvendibilefe='9' THEN 'N' ELSE 'S' END,T.codPaniereTit,T.tipoPaniereTit,T.codSottoPaniere,T.causalePaniere,NVL(T.datachiusura,21991231),T.INDICATORELIQUIDITA,T.Costosostenibileannuo,T.indCedolaCert,T.RAMOPOL,T.POLR3,T.GMPERR3,T.iprezzoriferimento,T.dprezzoriferimento,T.GMPOL3,T.GMPOL11,T.DIVISADENOMINAZIONE,T.GMPOL12,T.dprezzoriferimento,T.prezzodirimborso)
			]]></sql>
			
			
			<!-- <sql><![CDATA[
				/**
				*	Inserimento in STRUMENTOFINANZIARIO da flusso secondario ANAGRAFICA POSTE
				**/

			
			  MERGE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ INTO STRUMENTOFINANZIARIO S
			  USING(SELECT   CODICEBANCA,CODICETITOLO,CODICERISCHIOPROM,DESCRIZIONE,CODICEENTITA,CODICEGRUPPO,CODICESOTTOGRUPPO,DATAEMISSIONE,DATASCADENZA,CODICEESPERIENZA,ILLIQUIDO,COSTIUPFRONT,COSTIDIUSCITA,VAR,UL1Y,LOTTOMINIMO,TITOLOBANCOPOSTA,TIPOLOGIATIT,ISPERIMETROMIFID,IS_IVASS,
			  			IVASSPunteggioNucleo,IVASSPunteggioSitFin,ImpPremPerCOntroSitFinIVASS,codGRIvass,CodiceBisogno,CodiceInterno,LottoMinimoSuccessivo,FlagLottoMultiplo,isin,cdivisatrattazione,facquistabilefe,fvendibilefe,zenteemittente,fconflittointeresse,iprezzoriferimento,dataapertura,
			  			datachiusura,Costosostenibileannuo,codiceSchedaTit,POLR3,RAMOPOL,GMPOL3,GMPOL11,GMPOL12,GMPERR3,prezzodirimborso,
			  			CostoSostenibileAnnuoIVASS,codPaniereTit,tipoPaniereTit,codSottoPaniere,tClimifAmmesso,causalePaniere,dataInizioPaniere,dataFinePaniere,dataInizioQuot,dataProssCed,freqCedola,tassoCedola,indCedolaCert,IndicatoreLiquidita,dprezzoriferimento,DIVISADENOMINAZIONE,IMOLTIPLICATORE,IPREZZORIFERIMENTOEURO
			  			FROM TMP_PFANATITUPDATE) T
			  ON(T.CodiceInterno = S.CODICETITOLO)
			  WHEN MATCHED THEN UPDATE SET
			  S.DESCRIZIONE=T.DESCRIZIONE,
			  S.SETTORE=T.IS_IVASS, 
			  S.DATAEMISSIONE_INT=T.DATAEMISSIONE,
			  S.SCADENZA=T.DATASCADENZA,
			  S.CLASSEESPERIENZA=T.CODICEESPERIENZA,
			  S.ILLIQUIDO=T.ILLIQUIDO,
			  S.VAR=T.VAR,
			  S.UL1Y=T.UL1Y/100,
			  S.STATO='A',
			  S.MACROTIPOLOGIA=T.CODICEENTITA,
			  S.SOTTOTIPOLOGIA_1=T.CODICEGRUPPO,
			  S.SOTTOTIPOLOGIA_2=T.CODICESOTTOGRUPPO,
			  S.LOTTOMIN=CASE WHEN T.IPREZZORIFERIMENTOEURO<>0 THEN T.LOTTOMINIMO*T.IPREZZORIFERIMENTOEURO*T.IMOLTIPLICATORE
    					 WHEN T.IPREZZORIFERIMENTO<>0 THEN T.LOTTOMINIMO*T.IPREZZORIFERIMENTO*T.IMOLTIPLICATORE ELSE 
    					 T.LOTTOMINIMO END,
			  S.LOTTOMINSUCC=CASE WHEN T.IPREZZORIFERIMENTOEURO<>0 THEN T.LottoMinimoSuccessivo*T.IPREZZORIFERIMENTOEURO*T.IMOLTIPLICATORE
    					 WHEN T.IPREZZORIFERIMENTO<>0 THEN T.LottoMinimoSuccessivo*T.IPREZZORIFERIMENTO*T.IMOLTIPLICATORE ELSE 
    					 T.LottoMinimoSuccessivo END,
			  S.MODVERS=T.FlagLottoMultiplo,
			  S.CODICECOMPARTO=T.TIPOLOGIATIT,
			  S.DIVISATRATTAZIONE=T.cdivisatrattazione,
			  S.IS_BAILIN=T.CodiceBisogno,
			  S.STARTDATE=T.dataapertura,
			  S.DATACHIUSURA=NVL(T.datachiusura,21991231),
			  S.EMITTENTE=T.ZENTEEMITTENTE,
			  S.COSTI_ENTRATA=T.COSTIUPFRONT,
			  S.COSTI_USCITA=T.COSTIDIUSCITA,
			  S.DATACED=T.dataProssCed,
			  S.FREQ_CEDOLA=T.freqCedola,
			  S.RATEO_CEDOLARE=T.tassoCedola,
			  S.F_ACQUISTABILE= CASE WHEN T.facquistabilefe='9' THEN 'N' ELSE 'S' END,
			  S.F_VENDIBILE=CASE WHEN T.fvendibilefe='9' THEN 'N' ELSE 'S' END,
			  S.COD_PANIERE=T.codPaniereTit,
			  S.SOTTO_PANIERE=T.tipoPaniereTit,
			  S.COD_SOTTO_PANIERE=T.codSottoPaniere,
			  S.CAUSALE_PANIERE= T.causalePaniere,
			  S.INDICATORELIQUIDITA=T.INDICATORELIQUIDITA,
			  S.costo_fisso=T.Costosostenibileannuo,
			  S.TIPOCEDOLA=T.indCedolaCert,
			  S.RAMOPOL=T.RAMOPOL,
			  S.POLR3=T.POLR3,
			  S.GMPERR3=T.GMPERR3,
			  S.PREZZOEMI=T.iprezzoriferimento,
			  S.DATAAGGIORNAMENTO=T.dprezzoriferimento,
			  S.DATAULTIMOPREZZO=T.dprezzoriferimento,
			  S.GMPOL3=T.GMPOL3,
			  S.GMPOL11=T.GMPOL11,
			  S.GMPOL12=T.GMPOL12,
			  S.DIVISAEMISSIONE = T.DIVISADENOMINAZIONE,
			  S.CAPITALIZZAZIONEEURO=T.prezzodirimborso,
			  S.ISIN=T.CODICERISCHIOPROM,
			  S.IS_BFPINDEXED=T.ISPERIMETROMIFID,
			  S.F_PRIIP=CASE WHEN T.codiceSchedaTit='1' then '1' else '0' END 
			  WHEN NOT MATCHED THEN INSERT (S.CODICEBANCA,S.CODICETITOLO,S.ISIN,S.DESCRIZIONE,S.SETTORE,S.DATAEMISSIONE_INT,S.SCADENZA,S.CLASSEESPERIENZA,S.ILLIQUIDO,S.VAR,S.STATO,S.MACROTIPOLOGIA,S.SOTTOTIPOLOGIA_1,S.SOTTOTIPOLOGIA_2,S.UL1Y,S.LOTTOMIN,S.LOTTOMINSUCC,S.MODVERS,S.CODICECOMPARTO,S.DIVISATRATTAZIONE,S.IS_BAILIN,S.STARTDATE,S.EMITTENTE,COSTI_ENTRATA,COSTI_USCITA,DATACED,FREQ_CEDOLA,RATEO_CEDOLARE,F_ACQUISTABILE,F_VENDIBILE,COD_PANIERE,SOTTO_PANIERE,COD_SOTTO_PANIERE,CAUSALE_PANIERE,DATACHIUSURA,INDICATORELIQUIDITA,costo_fisso,TIPOCEDOLA,RAMOPOL,POLR3,GMPERR3,PREZZOEMI,DATAAGGIORNAMENTO,GMPOL3,GMPOL11,DIVISAEMISSIONE,S.GMPOL12,DATAULTIMOPREZZO,CAPITALIZZAZIONEEURO)
			  VALUES(T.CODICEBANCA,T.CodiceInterno,T.CODICERISCHIOPROM,T.DESCRIZIONE,T.IS_IVASS,T.DATAEMISSIONE,T.DATASCADENZA,T.CODICEESPERIENZA,T.ILLIQUIDO,T.VAR,'A',T.CODICEENTITA,T.CODICEGRUPPO,T.CODICESOTTOGRUPPO,T.UL1Y/100,CASE WHEN T.IPREZZORIFERIMENTOEURO<>0 THEN T.LOTTOMINIMO*T.IPREZZORIFERIMENTOEURO*T.IMOLTIPLICATORE
    					 WHEN T.IPREZZORIFERIMENTO<>0 THEN T.LOTTOMINIMO*T.IPREZZORIFERIMENTO*T.IMOLTIPLICATORE ELSE 
    					 T.LOTTOMINIMO END,
    					 CASE WHEN T.IPREZZORIFERIMENTOEURO<>0 THEN T.LottoMinimoSuccessivo*T.IPREZZORIFERIMENTOEURO*T.IMOLTIPLICATORE
    					 WHEN T.IPREZZORIFERIMENTO<>0 THEN T.LottoMinimoSuccessivo*T.IPREZZORIFERIMENTO*T.IMOLTIPLICATORE ELSE 
    					 T.LottoMinimoSuccessivo END,T.FlagLottoMultiplo,T.TIPOLOGIATIT,T.cdivisatrattazione,T.CodiceBisogno,T.dataapertura,T.ZENTEEMITTENTE,T.COSTIUPFRONT,T.COSTIDIUSCITA,T.dataProssCed,T.freqCedola,T.tassoCedola,
    					 CASE WHEN facquistabilefe='9' THEN 'N' ELSE 'S' END,
    					 CASE WHEN fvendibilefe='9' THEN 'N' ELSE 'S' END,T.codPaniereTit,T.tipoPaniereTit,T.codSottoPaniere,T.causalePaniere,NVL(T.datachiusura,21991231),T.INDICATORELIQUIDITA,T.Costosostenibileannuo,T.indCedolaCert,T.RAMOPOL,T.POLR3,T.GMPERR3,T.iprezzoriferimento,T.dprezzoriferimento,T.GMPOL3,T.GMPOL11,T.DIVISADENOMINAZIONE,T.GMPOL12,T.dprezzoriferimento,T.prezzodirimborso)
			]]></sql>-->
			
			<sql><![CDATA[
				COMMIT
			]]></sql>
			
			<sql><![CDATA[

					DECLARE
					    i INTEGER;
					BEGIN
					    SELECT COUNT(*) INTO i FROM USER_TABLES WHERE table_name = 'TMP_RDATE';
					    IF i = 1 THEN
					        EXECUTE IMMEDIATE 'DROP TABLE TMP_RDATE';
					    END IF;
					END;

			]]></sql>  


			<sql><![CDATA[
					DECLARE
					    i INTEGER;
					BEGIN
					    SELECT COUNT(*) INTO i FROM USER_TABLES WHERE table_name = 'TMP_RDATE';
					    IF i = 0 THEN
							EXECUTE IMMEDIATE 'CREATE TABLE TMP_RDATE(DATAROLLING NUMBER)';					    
						END IF;
					END;
			]]></sql>
			
			<sql><![CDATA[
			
				/**
				*	Creazione Elenco Date per BFP Indicizzati
				**/
			
			     DECLARE
				  	INSERTDATE NUMBER := 0;
				  	ENDDATE NUMBER := 0;
				  	CMONTH 	NUMBER := 0;
				  	CYEAR 	NUMBER := 0;
				BEGIN
				
					SELECT TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMM')) INTO ENDDATE FROM DUAL;
				
					SELECT NVL(MIN(TO_NUMBER(SUBSTR(ISIN,4,6))),TO_NUMBER(TO_CHAR(ADD_MONTHS(SYSDATE, 1),'YYYYMM'))) INTO INSERTDATE FROM TMP_PFANATIT WHERE ISPERIMETROMIFID='I' AND LENGTH(TRIM(TRANSLATE(SUBSTR(ISIN,4,6), ' +-.0123456789', ' '))) IS NULL;
				
					CMONTH:=TO_NUMBER(SUBSTR(TO_CHAR(INSERTDATE),5,2));
					CYEAR:=TO_NUMBER(SUBSTR(TO_CHAR(INSERTDATE),1,4));
				
				  	LOOP
                    	INSERT INTO TMP_RDATE (DATAROLLING) VALUES (INSERTDATE);  
				    	COMMIT;
				    
				    	IF CMONTH=12 THEN
				    		CMONTH:=0;
				    		CYEAR:=CYEAR+1;
				    	END IF;
				    	CMONTH:=CMONTH+1;
                                    
                        INSERTDATE := TO_NUMBER(CONCAT(TO_CHAR(CYEAR),TO_CHAR(CMONTH,'FM00')));

				    	EXIT WHEN INSERTDATE > ENDDATE;
				  	END LOOP;
				 
				END;			
			]]></sql>

			<sql><![CDATA[

				/**
				*	Inserimento in STRUMENTOFINANZIARIO di codici fittizi per BFP Indicizzati (CODICEBPF@YYYYMM)
				**/

              MERGE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ INTO STRUMENTOFINANZIARIO S
			  USING( 
			  	SELECT   	
                        CODICEBANCA,CODICETITOLO,CODICERISCHIOPROM AS OLDCODICERISCHIOPROM,CONCAT(SUBSTR(CODICERISCHIOPROM,1,3),DATAROLLING) AS CODICERISCHIOPROM,DESCRIZIONE,CODICEENTITA,CODICEGRUPPO,CODICESOTTOGRUPPO,DATAEMISSIONE,DATASCADENZA,CODICEESPERIENZA,ILLIQUIDO,COSTIUPFRONT,COSTIDIUSCITA,VAR,UL1Y,LOTTOMINIMO,TITOLOBANCOPOSTA,TIPOLOGIATIT,ISPERIMETROMIFID,IS_IVASS,
			  			IVASSPUNTEGGIONUCLEO,IVASSPUNTEGGIOSITFIN,IMPPREMPERCONTROSITFINIVASS,CODGRIVASS,CODICEBISOGNO,CODICEINTERNO AS OLDCODICEINTERNO,CONCAT(CONCAT(CODICEINTERNO,'@'),DATAROLLING) AS CODICEINTERNO,LOTTOMINIMOSUCCESSIVO,FLAGLOTTOMULTIPLO,ISIN,CDIVISATRATTAZIONE,FACQUISTABILEFE,FVENDIBILEFE,ZENTEEMITTENTE,FCONFLITTOINTERESSE,IPREZZORIFERIMENTO,DATAAPERTURA,
			  			DATACHIUSURA,COSTOSOSTENIBILEANNUO,CODICESCHEDATIT,POLR3,RAMOPOL,GMPOL3,GMPOL11,GMPOL12,GMPERR3,PREZZODIRIMBORSO,
			  			COSTOSOSTENIBILEANNUOIVASS,CODPANIERETIT,TIPOPANIERETIT,CODSOTTOPANIERE,TCLIMIFAMMESSO,CAUSALEPANIERE,DATAINIZIOPANIERE,DATAFINEPANIERE,DATAINIZIOQUOT,DATAPROSSCED,FREQCEDOLA,TASSOCEDOLA,INDCEDOLACERT,INDICATORELIQUIDITA,DPREZZORIFERIMENTO,DIVISADENOMINAZIONE,IMOLTIPLICATORE,IPREZZORIFERIMENTOEURO

				
				FROM TMP_PFANATIT,TMP_RDATE B
				
				WHERE ISPERIMETROMIFID='I'
                AND
                LENGTH(TRIM(TRANSLATE(SUBSTR(ISIN,4,6), ' +-.0123456789', ' '))) IS NULL
                AND
                LENGTH(TRIM(TRANSLATE(SUBSTR(DATASCADENZA,1,6), ' +-.0123456789', ' '))) IS NULL
                AND 
                TO_NUMBER(SUBSTR(ISIN,4,6)) < DATAROLLING
                AND 
                TO_NUMBER(SUBSTR(DATASCADENZA,1,6)) > DATAROLLING    
			  
			  ) T
			  ON(T.CODICEINTERNO = S.CODICETITOLO)
			  WHEN MATCHED THEN UPDATE SET
			  S.DESCRIZIONE=T.DESCRIZIONE,
			  S.SETTORE=T.IS_IVASS, 
			  S.DATAEMISSIONE_INT=T.DATAEMISSIONE,
			  S.SCADENZA=T.DATASCADENZA,
			  S.CLASSEESPERIENZA=T.CODICEESPERIENZA,
			  S.ILLIQUIDO=T.ILLIQUIDO,
			  S.VAR=T.VAR,
			  S.UL1Y=T.UL1Y/100,
			  S.STATO='A',
			  S.MACROTIPOLOGIA=T.CODICEENTITA,
			  S.SOTTOTIPOLOGIA_1=T.CODICEGRUPPO,
			  S.SOTTOTIPOLOGIA_2=T.CODICESOTTOGRUPPO,
			  S.LOTTOMIN=CASE WHEN T.IPREZZORIFERIMENTOEURO<>0 THEN T.LOTTOMINIMO*T.IPREZZORIFERIMENTOEURO*T.IMOLTIPLICATORE
    					 WHEN T.IPREZZORIFERIMENTO<>0 THEN T.LOTTOMINIMO*T.IPREZZORIFERIMENTO*T.IMOLTIPLICATORE ELSE 
    					 T.LOTTOMINIMO END,
			  S.LOTTOMINSUCC=CASE WHEN T.IPREZZORIFERIMENTOEURO<>0 THEN T.LOTTOMINIMOSUCCESSIVO*T.IPREZZORIFERIMENTOEURO*T.IMOLTIPLICATORE
    					 WHEN T.IPREZZORIFERIMENTO<>0 THEN T.LOTTOMINIMOSUCCESSIVO*T.IPREZZORIFERIMENTO*T.IMOLTIPLICATORE ELSE 
    					 T.LOTTOMINIMOSUCCESSIVO END,
			  S.MODVERS=T.FLAGLOTTOMULTIPLO,
			  S.CODICECOMPARTO=T.TIPOLOGIATIT,
			  S.DIVISATRATTAZIONE=T.CDIVISATRATTAZIONE,
			  S.IS_BAILIN=T.CODICEBISOGNO,
			  S.STARTDATE=T.DATAAPERTURA,
			  S.DATACHIUSURA=NVL(T.DATACHIUSURA,21991231),
			  S.EMITTENTE=T.ZENTEEMITTENTE,
			  S.COSTI_ENTRATA=T.COSTIUPFRONT,
			  S.COSTI_USCITA=T.COSTIDIUSCITA,
			  S.DATACED=T.DATAPROSSCED,
			  S.FREQ_CEDOLA=T.FREQCEDOLA,
			  S.RATEO_CEDOLARE=T.TASSOCEDOLA,
			  S.F_ACQUISTABILE= CASE WHEN T.FACQUISTABILEFE='9' THEN 'N' ELSE 'S' END,
			  S.F_VENDIBILE=CASE WHEN T.FVENDIBILEFE='9' THEN 'N' ELSE 'S' END,
			  S.COD_PANIERE=T.CODPANIERETIT,
			  S.SOTTO_PANIERE=T.TIPOPANIERETIT,
			  S.COD_SOTTO_PANIERE=T.CODSOTTOPANIERE,
			  S.CAUSALE_PANIERE= T.CAUSALEPANIERE,
			  S.INDICATORELIQUIDITA=T.INDICATORELIQUIDITA,
			  S.COSTO_FISSO=T.COSTOSOSTENIBILEANNUO,
			  S.TIPOCEDOLA=T.INDCEDOLACERT,
			  S.RAMOPOL=T.RAMOPOL,
			  S.POLR3=T.POLR3,
			  S.GMPERR3=T.GMPERR3,
			  S.PREZZOEMI=T.IPREZZORIFERIMENTO,
			  S.DATAAGGIORNAMENTO=T.DPREZZORIFERIMENTO,
			  S.DATAULTIMOPREZZO=T.DPREZZORIFERIMENTO,
			  S.GMPOL3=T.GMPOL3,
			  S.GMPOL11=T.GMPOL11,
			  S.GMPOL12=T.GMPOL12,
			  S.DIVISAEMISSIONE = T.DIVISADENOMINAZIONE,
			  S.CAPITALIZZAZIONEEURO=T.PREZZODIRIMBORSO,
			  S.ISIN=T.CODICERISCHIOPROM,
			  S.IS_BFPINDEXED=T.ISPERIMETROMIFID
			  WHEN NOT MATCHED THEN INSERT (S.CODICEBANCA,S.CODICETITOLO,S.ISIN,S.DESCRIZIONE,S.SETTORE,S.DATAEMISSIONE_INT,S.SCADENZA,S.CLASSEESPERIENZA,S.ILLIQUIDO,S.VAR,S.STATO,S.MACROTIPOLOGIA,S.SOTTOTIPOLOGIA_1,S.SOTTOTIPOLOGIA_2,S.UL1Y,S.LOTTOMIN,S.LOTTOMINSUCC,S.MODVERS,S.CODICECOMPARTO,S.DIVISATRATTAZIONE,S.IS_BAILIN,S.STARTDATE,S.EMITTENTE,COSTI_ENTRATA,COSTI_USCITA,DATACED,FREQ_CEDOLA,RATEO_CEDOLARE,F_ACQUISTABILE,F_VENDIBILE,COD_PANIERE,SOTTO_PANIERE,COD_SOTTO_PANIERE,CAUSALE_PANIERE,DATACHIUSURA,INDICATORELIQUIDITA,COSTO_FISSO,TIPOCEDOLA,RAMOPOL,POLR3,GMPERR3,PREZZOEMI,DATAAGGIORNAMENTO,GMPOL3,GMPOL11,DIVISAEMISSIONE,S.GMPOL12,DATAULTIMOPREZZO,CAPITALIZZAZIONEEURO,S.IS_BFPINDEXED)
			  VALUES(T.CODICEBANCA,T.CODICEINTERNO,T.CODICERISCHIOPROM,T.DESCRIZIONE,T.IS_IVASS,T.DATAEMISSIONE,T.DATASCADENZA,T.CODICEESPERIENZA,T.ILLIQUIDO,T.VAR,'A',T.CODICEENTITA,T.CODICEGRUPPO,T.CODICESOTTOGRUPPO,T.UL1Y/100,CASE WHEN T.IPREZZORIFERIMENTOEURO<>0 THEN T.LOTTOMINIMO*T.IPREZZORIFERIMENTOEURO*T.IMOLTIPLICATORE
    					 WHEN T.IPREZZORIFERIMENTO<>0 THEN T.LOTTOMINIMO*T.IPREZZORIFERIMENTO*T.IMOLTIPLICATORE ELSE 
    					 T.LOTTOMINIMO END,
    					 CASE WHEN T.IPREZZORIFERIMENTOEURO<>0 THEN T.LOTTOMINIMOSUCCESSIVO*T.IPREZZORIFERIMENTOEURO*T.IMOLTIPLICATORE
    					 WHEN T.IPREZZORIFERIMENTO<>0 THEN T.LOTTOMINIMOSUCCESSIVO*T.IPREZZORIFERIMENTO*T.IMOLTIPLICATORE ELSE 
    					 T.LOTTOMINIMOSUCCESSIVO END,T.FLAGLOTTOMULTIPLO,T.TIPOLOGIATIT,T.CDIVISATRATTAZIONE,T.CODICEBISOGNO,T.DATAAPERTURA,T.ZENTEEMITTENTE,T.COSTIUPFRONT,T.COSTIDIUSCITA,T.DATAPROSSCED,T.FREQCEDOLA,T.TASSOCEDOLA,
    					 CASE WHEN FACQUISTABILEFE='9' THEN 'N' ELSE 'S' END,
    					 CASE WHEN FVENDIBILEFE='9' THEN 'N' ELSE 'S' END,T.CODPANIERETIT,T.TIPOPANIERETIT,T.CODSOTTOPANIERE,T.CAUSALEPANIERE,NVL(T.DATACHIUSURA,21991231),T.INDICATORELIQUIDITA,T.COSTOSOSTENIBILEANNUO,T.INDCEDOLACERT,T.RAMOPOL,T.POLR3,T.GMPERR3,T.IPREZZORIFERIMENTO,T.DPREZZORIFERIMENTO,T.GMPOL3,T.GMPOL11,T.DIVISADENOMINAZIONE,T.GMPOL12,T.DPREZZORIFERIMENTO,T.PREZZODIRIMBORSO,T.ISPERIMETROMIFID)
                                
 				
			]]></sql>


			<sql><![CDATA[
				COMMIT
			]]></sql>

			
			<sql><![CDATA[
				update /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ strumentofinanziario set modvers=case when modvers='S' then '0' else '1' end
			]]></sql>
			
			
			<sql><![CDATA[
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET TIPO = 'OTH' WHERE TIPO<>'IDX' AND TIPO<>'CUR' AND TIPO <>'CSH' AND TIPO <>'GP'
			]]></sql>
			
			<sql><![CDATA[
				COMMIT
			]]></sql>
			
			<sql><![CDATA[
				MERGE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ INTO STRUMENTOFINANZIARIO S 
				USING(SELECT  TIPOLOGIA,C_TIPO_ENTITA,C_TIPO_GRUPPO,C_TIPO_SOTTOGRUPPO,TIPO_PFP,MACROTIPOLOGIA,SOTTOTIPOLOGIA_1,TIPO_EX_ANTE,DESC_TIPO_EX_ANTE FROM TMP_PFPENTITATIPO) T
				ON(T.C_TIPO_ENTITA=LPAD(S.MACROTIPOLOGIA,3,'0') 
				AND T.C_TIPO_GRUPPO=LPAD(S.SOTTOTIPOLOGIA_1,3,'0')
				AND T.C_TIPO_SOTTOGRUPPO=LPAD(S.SOTTOTIPOLOGIA_2,3,'0')
				AND S.CODICECOMPARTO='TITOLI')
				WHEN MATCHED 
					THEN UPDATE SET 
					S.TIPO=T.TIPO_PFP,
					S.LIVELLO_1=T.MACROTIPOLOGIA,
					S.LIVELLO_2=T.SOTTOTIPOLOGIA_1,
					S.LIVELLO_3=T.TIPO_EX_ANTE,
					S.LIVELLO_4=T.DESC_TIPO_EX_ANTE
			]]></sql>
			
			<sql><![CDATA[
				COMMIT
			]]></sql>
			
			<sql><![CDATA[
				MERGE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ INTO STRUMENTOFINANZIARIO S 
				USING(SELECT  TIPOLOGIA,C_TIPO_ENTITA,C_TIPO_GRUPPO,C_TIPO_SOTTOGRUPPO,TIPO_PFP,MACROTIPOLOGIA,SOTTOTIPOLOGIA_1,TIPO_EX_ANTE,DESC_TIPO_EX_ANTE FROM TMP_PFPENTITATIPO) T
				ON(S.CODICECOMPARTO=T.TIPOLOGIA AND S.CODICECOMPARTO<>'TITOLI' AND S.CODICECOMPARTO<>'POLIZZE')
				WHEN MATCHED 
					THEN UPDATE SET 
					S.TIPO=T.TIPO_PFP,
					S.LIVELLO_1=T.MACROTIPOLOGIA,
					S.LIVELLO_2=T.SOTTOTIPOLOGIA_1,
					S.LIVELLO_3=T.TIPO_EX_ANTE,
					S.LIVELLO_4=T.DESC_TIPO_EX_ANTE	
			]]></sql>
			<sql><![CDATA[
				COMMIT
			]]></sql>
			
			<sql><![CDATA[
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET
				TIPO='PZ',
				LIVELLO_1='ASS',
				LIVELLO_2= CASE  WHEN (RAMOPOL in ('1'))  THEN 'POLIZZE RAMO I'
								 WHEN (RAMOPOL in ('3','5'))  THEN (CASE WHEN (POLR3='U') THEN 'POLIZZE UNIT LINKED'
								 										 WHEN (POLR3='I') THEN 'POLIZZE INDEX LINKED' END)
								 WHEN (RAMOPOL in ('M','N'))  THEN 'POLIZZE MULTIRAMO'
								 END
				WHERE CODICECOMPARTO='POLIZZE'
			]]></sql>
			
			<sql><![CDATA[
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET
				LIVELLO_2= 'PREVIDENZA'
				WHERE CODICECOMPARTO='POLIZZE'
				AND EXISTS(SELECT 1 FROM TMP_PFANATIT WHERE codgrivass in(10,113) and STRUMENTOFINANZIARIO.CODICETITOLO=CODICEINTERNO)
			]]></sql>


			<sql><![CDATA[
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET
				TIPO='CSH',
				LIVELLO_1='LIQ',
				LIVELLO_2='PPAY EVO'
				WHERE CODICECOMPARTO='PPAY_EVO'
			]]></sql>
			
 			<sql><![CDATA[
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET
				LIVELLO_2= 'Gestioni Patrimoniali'
 				WHERE CODICECOMPARTO='GPM'
 			]]></sql>		

			<sql><![CDATA[
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET
				LIVELLO_2= 'N.D.'
				WHERE LIVELLO_2 IS NULL
			]]></sql>			
			<sql><![CDATA[
				COMMIT
			]]></sql>
			
			<sql><![CDATA[
			    UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET
			    SEGMENTO= CASE  WHEN (CODICECOMPARTO IN ('TITOLI','FONDI','GPM','FONDI ESTERNI')) THEN 'INV'
			        WHEN (CODICECOMPARTO IN ('POLIZZE')) THEN (CASE WHEN LIVELLO_2='PREVIDENZA' THEN 'CRE'
			                       ELSE 'INV' END)
			        WHEN (CODICECOMPARTO IN ('BFP')) THEN 'CRE'
			        WHEN (CODICECOMPARTO IN ('CC','LIBRETTO','PPAY_EVO')) THEN 'RIS'
			        END
			]]></sql>
			<sql><![CDATA[
				COMMIT
			]]></sql>
			
			<sql><![CDATA[
				/**
				*	UPDATE STRUMENTOFINANZIARIO DURATA
				**/
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO S
				SET 
					S.DURATA = (SELECT TO_DATE(S.SCADENZA,'yyyymmdd')-sysdate from dual)
				WHERE
					SCADENZA IS NOT NULL AND SCADENZA>0
				
			]]></sql>
			<sql><![CDATA[
				COMMIT
			]]></sql>
			
			<sql><![CDATA[
				/**
				*	FORCE COMPLESSITA TO 5 IF ZERO
				**/
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET CLASSEESPERIENZA = 5 WHERE CLASSEESPERIENZA = 0
			]]></sql> 
			
			<sql><![CDATA[
				/**
				*	FORCE BISOGNO CC LIB
				**/
				update /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ strumentofinanziario set segmento='RIS' where codicetitolo like 'LIQ%%'
			]]></sql> 
			
			<sql><![CDATA[
				/**
				*	FORCE PERIMETRO S=FUORI PERIMETRO MIFID
				**/
				
				update /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ strumentofinanziario set PERIMETRO='S' where SEGMENTO<>'INV'
			]]></sql> 
			
			<sql><![CDATA[
				/**
				*	FORCE PERIMETRO N=PERIMETRO MIFID
				**/

				update /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ strumentofinanziario set perimetro='N', F_ACQUISTABILE='N', F_VENDIBILE='N' where (codicecomparto in ('LIBRETTO','BFP') OR CODICETITOLO='LIQ_EUR_LIB')
			]]></sql> 

			<sql><![CDATA[
				/**
				*	FORCE PERIMETRO N=PERIMETRO MIFID
				**/

				update /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ strumentofinanziario set perimetro='N', F_ACQUISTABILE='N', F_VENDIBILE='N' where CODICETITOLO='LIQ_EUR_LIB_VINC'
			]]></sql> 
			
			<sql><![CDATA[
				/**
				*	FORCE PERIMETRO N=PERIMETRO MIFID
				**/

				update /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ strumentofinanziario set perimetro='N' where LIVELLO_2='POLIZZE RAMO I'
			]]></sql> 
			
			<sql><![CDATA[
				/**
				*	FORCE PERIMETRO N=PERIMETRO MIFID
				**/

				update /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ strumentofinanziario set perimetro='N', F_ACQUISTABILE='N', F_VENDIBILE='N' where CODICETITOLO='LIQ_EUR'
			]]></sql> 
			
			<sql><![CDATA[
				/**
				*	FORCE PERIMETRO N=PERIMETRO MIFID
				**/

				update /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ strumentofinanziario set perimetro='N' where SEGMENTO='INV'
			]]></sql> 
			
			
			<sql><![CDATA[
				COMMIT
			]]></sql>
			
			<sql><![CDATA[
				/**
				*	FORCE ALLOCABILE
				**/
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET ALLOCABILE='KO'
			]]></sql> 
			<sql><![CDATA[
				update /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ strumentofinanziario set
				startdate=to_char(sysdate,'YYYYMMDD')
				where (STARTDATE IS NULL OR STARTDATE='0') AND CODICECOMPARTO<>'FONDI' AND CODICECOMPARTO<>'POLIZZE'
			]]></sql> 
			
			<sql><![CDATA[
				update /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ strumentofinanziario set
				DATACHIUSURA=to_char(sysdate+1,'YYYYMMDD')
				where (DATACHIUSURA IS NULL OR DATACHIUSURA='0') AND CODICECOMPARTO<>'FONDI' 
			]]></sql> 
			
			<sql><![CDATA[
				/**
				*	FORCE ALLOCABILE
				**/
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET ALLOCABILE='1'
				WHERE SEGMENTO='INV' AND 
				STARTDATE<=to_char(sysdate,'yyyymmdd')
			    AND	DATACHIUSURA>=to_char(sysdate,'yyyymmdd')

			]]></sql> 

			<sql><![CDATA[
				/**
				*	FORCE F_ACQUISTABILE FONDI NON ALLOCABILI
				**/
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET F_ACQUISTABILE='N'
				WHERE CODICECOMPARTO='FONDI' AND 
				ALLOCABILE='KO'
			]]></sql> 


			<sql><![CDATA[
				/**
				*	FORCE ALLOCABILE TITOLI NON ACQUISTABILI
				**/
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET ALLOCABILE='KO'
				WHERE CODICECOMPARTO='TITOLI' AND 
				F_ACQUISTABILE='N'
			]]></sql> 

			
			<sql><![CDATA[
				/**
				*	FORCE ALLOCABILE RAMO 3 MULTIRAMO
				**/
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET ALLOCABILE='KO'
				WHERE CODICETITOLO IN (SELECT GMPOL3 FROM STRUMENTOFINANZIARIO)

			]]></sql> 
			
			<sql><![CDATA[
				/**
				*	FORCE ALLOCABILE POLIZZE SENZA DATA APERTURA
				**/
				update /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET ALLOCABILE='KO' WHERE CODICECOMPARTO='POLIZZE' AND (STARTDATE IS NULL OR STARTDATE='0')
			]]></sql> 
			
			<sql><![CDATA[
				/**
				*	FORCE ALLOCABILE POLIZZE SENZA RAMO
				**/
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET ALLOCABILE='KO' WHERE ramopol is null and tipo='PZ'
			]]></sql> 
			
			<sql><![CDATA[
				COMMIT
			]]></sql>

			<sql><![CDATA[
				/**
				*	FORCE EMITTENTE POSTE VITA
				**/
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET EMITTENTE='POSTE VITA' where tipo='PZ'
			]]></sql> 
			<sql><![CDATA[
				COMMIT
			]]></sql>
			
					
			<sql><![CDATA[
				/**
				*	FORCE LOTTOMIN
				**/
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET LOTTOMIN=100
				WHERE LOTTOMIN IS NULL OR LOTTOMIN<100
			]]></sql> 
			<sql><![CDATA[
				
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET LOTTOMINSUCC=100
				WHERE LOTTOMINSUCC IS NULL OR LOTTOMINSUCC<100
			]]></sql> 
			<sql><![CDATA[
				COMMIT
			]]></sql>
			
			<sql><![CDATA[
				--FORCE ISIN MULTIRAMO
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET ISIN='PAMULTVAL3' WHERE RAMOPOL IN ('M')
			]]></sql> 
			<sql><![CDATA[
				COMMIT
			]]></sql>
			
			
			<sql><![CDATA[
				/**
				*	FORCE DIVISA POLIZZE - BUONI POSTALI
				**/
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET  DIVISAEMISSIONE='EUR',DIVISATRATTAZIONE='EUR' 
				WHERE TIPO='PZ'
			]]></sql> 
			<sql><![CDATA[
				
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET  DIVISAEMISSIONE='EUR',DIVISATRATTAZIONE='EUR' 
				WHERE LIVELLO_2='BUONI FRUTTIFERI POSTALI'
			]]></sql> 
			
			<sql><![CDATA[
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET  DIVISAEMISSIONE='EUR',DIVISATRATTAZIONE='EUR' 
				WHERE TIPO='FND'
			]]></sql>
			
			<sql><![CDATA[
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET  DIVISAEMISSIONE='EUR',DIVISATRATTAZIONE='EUR' 
				WHERE TIPO='CSH'
			]]></sql>  
			<sql><![CDATA[
				COMMIT
			]]></sql>

			<sql><![CDATA[
				/**
				*	FORCE SCHEDA PRODOTTO
				**/
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO set SCHEDAPRODOTTO='0'
			]]></sql> 
						
			<sql><![CDATA[
				COMMIT
			]]></sql>
			

			<sql><![CDATA[
				/**
				*	FORZATURA MANUALE ALLOCABILITA VECCHIE POLIZZE - PASSATE ANCORA ALLOCABILI - DA ELIMINARE POST AGGIUNTA FORZATURA IN GOVERNANCE
				**/
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO S SET ALLOCABILE='KO' WHERE CODICETITOLO IN ('MRUC3','MRUC2','MRUC4','NULD3','NUL03','MRUFM','MRUFE','MRUFD')
			]]></sql> 
			<sql><![CDATA[
				COMMIT
			]]></sql>
			
			<sql><![CDATA[
				UPDATE /*+ APPEND NOLOGGING PARALLEL(STRUMENTOFINANZIARIO,8)*/ STRUMENTOFINANZIARIO SET PERIMETRO_REND = NULL, PERIMETRO_REND_M2 = NULL, TIPO_REND = NULL WHERE CODICECOMPARTO = 'FONDI ESTERNI'
			]]></sql>
			<sql><![CDATA[
				UPDATE STRUMENTOFINANZIARIO 
				SET PERIMETRO_REND = '0', PERIMETRO_REND_M2 = '0', TIPO_REND = '0'
				WHERE LIVELLO_2 IN ('ALTRI STRUMENTI','CONTI CORRENTI','INDICI','N.D.','PREVIDENZA')
				AND PERIMETRO_REND IS NULL 
				AND PERIMETRO_REND_M2 IS NULL 
				AND TIPO_REND IS NULL
			]]></sql>
			<sql><![CDATA[
				UPDATE STRUMENTOFINANZIARIO 
				SET PERIMETRO_REND = '0', PERIMETRO_REND_M2 = '0', TIPO_REND = 'QTA'
				WHERE LIVELLO_2 = 'FUTURE'
				AND PERIMETRO_REND IS NULL 
				AND PERIMETRO_REND_M2 IS NULL 
				AND TIPO_REND IS NULL
			]]></sql>
			<sql><![CDATA[
				UPDATE STRUMENTOFINANZIARIO 
				SET PERIMETRO_REND = '1', PERIMETRO_REND_M2 = '0', TIPO_REND = 'QTA'
				WHERE LIVELLO_2 = 'LIBRETTI'
				AND PERIMETRO_REND IS NULL 
				AND PERIMETRO_REND_M2 IS NULL 
				AND TIPO_REND IS NULL
			]]></sql>
			<sql><![CDATA[
				UPDATE STRUMENTOFINANZIARIO 
				SET PERIMETRO_REND = '1', PERIMETRO_REND_M2 = '1', TIPO_REND = 'CTVMOV'
				WHERE LIVELLO_2 = 'BUONI FRUTTIFERI'
				AND PERIMETRO_REND IS NULL 
				AND PERIMETRO_REND_M2 IS NULL 
				AND TIPO_REND IS NULL
			]]></sql>
			<sql><![CDATA[
				UPDATE STRUMENTOFINANZIARIO 
				SET PERIMETRO_REND = '1', PERIMETRO_REND_M2 = '1', TIPO_REND = 'CTVMOV'
				WHERE LIVELLO_2 IN ('POLIZZE INDEX LINKED','POLIZZE MULTIRAMO','POLIZZE RAMO I','POLIZZE UNIT LINKED')
				AND PERIMETRO_REND IS NULL 
				AND PERIMETRO_REND_M2 IS NULL 
				AND TIPO_REND IS NULL
			]]></sql>
			<sql><![CDATA[
				UPDATE STRUMENTOFINANZIARIO 
				SET PERIMETRO_REND = '1', PERIMETRO_REND_M2 = '1', TIPO_REND = 'CTVMOV'
				WHERE LIVELLO_2 ='BUONI FRUTTIFERI POSTALI'
				AND PERIMETRO_REND IS NULL 
				AND PERIMETRO_REND_M2 IS NULL 
				AND TIPO_REND IS NULL
			]]></sql>
			<sql><![CDATA[
				UPDATE STRUMENTOFINANZIARIO 
				SET PERIMETRO_REND = '1', PERIMETRO_REND_M2 = '1', TIPO_REND = 'QTA'
				WHERE LIVELLO_2 IN ('AZIONI','COVERED WARRANT','ETC','ETF','FONDI COMUNI','OBBLIGAZIONI','SICAV','WARRANTS', 'FONDI ESTERNI')
				AND PERIMETRO_REND IS NULL 
				AND PERIMETRO_REND_M2 IS NULL 
				AND TIPO_REND IS NULL
			]]></sql>
			<sql><![CDATA[
				UPDATE STRUMENTOFINANZIARIO SF 
				SET SF.DIVISA = SF.DIVISATRATTAZIONE
				WHERE SF.LIVELLO_2 != 'OBBLIGAZIONI'
				AND SF.DIVISA IS NULL
			]]></sql>
			<sql><![CDATA[
				UPDATE STRUMENTOFINANZIARIO SF 
				SET SF.DIVISA = SF.DIVISAEMISSIONE
				WHERE SF.LIVELLO_2 = 'OBBLIGAZIONI'
				AND SF.DIVISA IS NULL
			]]></sql>
			
			<sql><![CDATA[
				--OVERRIDE LIVELLO_2 GESTIONE MULTIRAMO
			
				MERGE INTO STRUMENTOFINANZIARIO S
				USING(SELECT DISTINCT COD_UNIVERSO FROM TBL_BRIDGE WHERE IS_RAMOI_GS = '0')TB
				ON(s.CODICETITOLO=TB.COD_UNIVERSO)
				WHEN MATCHED THEN
				UPDATE SET 
				LIVELLO_5=LIVELLO_2,
				LIVELLO_2='POLIZZE MULTIRAMO'
			]]></sql>
			<sql><![CDATA[
				--OVERRIDE LIVELLO_2 GESTIONE MULTIRAMO SOTTASTANTI PREMIUM
			
				MERGE INTO STRUMENTOFINANZIARIO S
				USING(SELECT DISTINCT CODICETITOLO, RAMOPOL FROM TBL_BRIDGE WHERE FONDO_RAMOIII = '1') TB
				ON(TB.CODICETITOLO = S.CODICETITOLO)
				WHEN MATCHED
				THEN UPDATE SET 
				S.LIVELLO_5=S.LIVELLO_2,
				S.RAMOPOL=TB.RAMOPOL,
				S.LIVELLO_2='POLIZZE MULTIRAMO_SOTT'
			]]></sql>
			<sql><![CDATA[
				commit
			]]></sql>
		</sqlProcess>
	</task>	
</job>
