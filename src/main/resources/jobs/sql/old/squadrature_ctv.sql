DECLARE

CURSOR SQUADRATURE_CTV IS

-- Squadrature per posizioni in cui ci sono sia i saldi che i movimenti
SELECT DISTINCT SF.LIVELLO_2 																	AS TIPOSTRUM,
				R.NDG 																			AS CODICECLIENTE,
				R.CODICERAPPORTO 																AS CODICERAPPORTO,
				R.TIPO 																			AS TIPO, 
				R.SOTTORAPPORTO 																AS SOTTO_RAPPORTO,
				'07601'																			AS CODICEBANCA,
				R.CODICEAGENZIA 																AS CODICEAGENZIA,
				R.STATO 																		AS STATO,
				R.ID 																			AS IDRAPPORTO,
				R.IDPTF 																		AS IDPTF,
				SF.CODICETITOLO 																AS CODICETITOLO,
				SF.DESCRIZIONE 																	AS DESCRIZIONETITOLO,
				SALS.DATA																		AS DATASALDO,
				NVL(SALS.CTV, 0) 																AS CTV,
				ROUND(ABS(((NVL(SALS.CTV, 0)/MOVS.SOMMAMOV) - 1)), 5)							AS VARIAZIONE,
				ROUND((POWER((1 + SS.SOGLIA), ((TO_DATE((SALS.DATA), 'YYYYMMDD') - TO_DATE((MOVS.MINDATA), 'YYYYMMDD'))/365)) - 1),5)	 AS SOGLIA_PONDERATA,
				SS.SOGLIA 																		AS SOGLIA,
				SYSDATE 																		AS DATAINS,
				TO_DATE((MOVS.MINDATA), 'YYYYMMDD') 											AS DATAINIZIO,
				NVL(MOVS.SOMMAMOV, 0)															AS SOMMAMOV,
				NVL(MOVS.SOMMAMOVPOS, 0)														AS SOMMAMOVPOS,
				NVL(MOVS.SOMMAMOVNEG, 0)														AS SOMMAMOVNEG,
				TO_DATE((MOVS.MINDATA), 'YYYYMMDD')												AS MINDATA,
				TO_DATE((MOVS.MAXDATA), 'YYYYMMDD')												AS MAXDATA,
				SYSDATE 																		AS DATAAGG,
				ABS(NVL(SALS.CTV, 0) - NVL(MOVS.SOMMAMOV, 0))                                   AS DIFF_EURO
FROM SQUADRATURE_CTV_MOVS MOVS
INNER JOIN RAPPORTO R
ON R.ID = MOVS.IDRAPPORTO
INNER JOIN SQUADRATURE_CTV_SALS SALS
    ON MOVS.CODICETITOLO = SALS.CODICETITOLO
    AND R.IDPTF = SALS.IDPTF
INNER JOIN STRUMENTOFINANZIARIO SF 
	ON MOVS.CODICETITOLO = SF.CODICETITOLO
INNER JOIN SOGLIESQUAD_CTV SS 
    ON SF.LIVELLO_2 = SS.TIPOLOGIA 
WHERE SF.PERIMETRO_REND = '1'
AND MOVS.SOMMAMOV != 0
AND (TO_DATE((SALS.DATA), 'YYYYMMDD') - TO_DATE((MOVS.MINDATA), 'YYYYMMDD')) != 0
AND ABS(((NVL(SALS.CTV, 0)/MOVS.SOMMAMOV) - 1)) > (POWER((1 + SS.SOGLIA), ((TO_DATE((SALS.DATA), 'YYYYMMDD') - TO_DATE((MOVS.MINDATA), 'YYYYMMDD'))/365)) - 1)

UNION

-- Squadrature per posizioni in cui ci sono i movimenti ma non ci sono i saldi
SELECT DISTINCT SF.LIVELLO_2 																		AS TIPOSTRUM,
				R.NDG 																				AS CODICECLIENTE,
				R.CODICERAPPORTO 																	AS CODICERAPPORTO,
				R.TIPO 																				AS TIPO, 
				R.SOTTORAPPORTO 																	AS SOTTO_RAPPORTO,
				'07601' 																			AS CODICEBANCA,
				R.CODICEAGENZIA 																	AS CODICEAGENZIA,
				R.STATO 																			AS STATO,
				R.ID 																				AS IDRAPPORTO,
				R.IDPTF 																			AS IDPTF,
				SF.CODICETITOLO 																	AS CODICETITOLO,
				SF.DESCRIZIONE 																		AS DESCRIZIONETITOLO,
				MOVS.MAXDATA																		AS DATASALDO,
				0 																					AS CTV,
				ROUND(ABS((MOVS.SOMMAMOV/MOVS.SOMMAMOVPOS)), 5)										AS VARIAZIONE,
				ROUND((POWER((1 + SS.SOGLIA), (TO_DATE((MOVS.MAXDATA), 'YYYYMMDD') - TO_DATE((MOVS.MINDATA), 'YYYYMMDD'))/365) - 1),5)		AS SOGLIA_PONDERATA,
				SS.SOGLIA 																			AS SOGLIA,
				SYSDATE 																			AS DATAINS,
				TO_DATE((MOVS.MINDATA), 'YYYYMMDD') 												AS DATAINIZIO,
				NVL(MOVS.SOMMAMOV, 0)																AS SOMMAMOV,
				NVL(MOVS.SOMMAMOVPOS, 0)															AS SOMMAMOVPOS,
				NVL(MOVS.SOMMAMOVNEG, 0)															AS SOMMAMOVNEG,
				TO_DATE((MOVS.MINDATA), 'YYYYMMDD')													AS MINDATA,
				TO_DATE((MOVS.MAXDATA), 'YYYYMMDD')													AS MAXDATA,
				SYSDATE 																			AS DATAAGG,
				ABS(0 - NVL(MOVS.SOMMAMOV, 0))                                   					AS DIFF_EURO
FROM SQUADRATURE_CTV_MOVS MOVS
INNER JOIN RAPPORTO R
ON R.ID = MOVS.IDRAPPORTO
LEFT JOIN SALDO_REND SR
ON SR.IDPTF= R.IDPTF AND SR.CODICETITOLO = MOVS.CODICETITOLO
INNER JOIN STRUMENTOFINANZIARIO SF 
	ON MOVS.CODICETITOLO = SF.CODICETITOLO
INNER JOIN SOGLIESQUAD_CTV SS 
    ON SF.LIVELLO_2 = SS.TIPOLOGIA 
WHERE SF.PERIMETRO_REND = '1'
AND MOVS.SOMMAMOVPOS != 0
AND (TO_DATE((MOVS.MAXDATA), 'YYYYMMDD') - TO_DATE((MOVS.MINDATA), 'YYYYMMDD')) != 0
AND SR.IDPTF IS NULL
AND ABS((MOVS.SOMMAMOV/MOVS.SOMMAMOVPOS)) > (POWER((1 + SS.SOGLIA), (TO_DATE((MOVS.MAXDATA), 'YYYYMMDD') - TO_DATE((MOVS.MINDATA), 'YYYYMMDD'))/365) - 1)

UNION 

-- Squadrature per posizioni in cui NON ci sono i movimenti ma ci sono i saldi
SELECT DISTINCT SF.LIVELLO_2 					AS TIPOSTRUM,
				R.NDG 							AS CODICECLIENTE,
				R.CODICERAPPORTO 				AS CODICERAPPORTO,
				R.TIPO 							AS TIPO, 
				R.SOTTORAPPORTO 				AS SOTTO_RAPPORTO,
				'07601' 						AS CODICEBANCA,
				R.CODICEAGENZIA 				AS CODICEAGENZIA,
				R.STATO 						AS STATO,
				R.ID 							AS IDRAPPORTO,
				R.IDPTF 						AS IDPTF,
				SF.CODICETITOLO 				AS CODICETITOLO,
				SF.DESCRIZIONE 					AS DESCRIZIONETITOLO,
				SALS.DATA						AS DATASALDO,
				NVL(SALS.CTV, 0) 				AS CTV,
				999 							AS VARIAZIONE,
				999								AS SOGLIA_PONDERATA,
				SS.SOGLIA 						AS SOGLIA,
				SYSDATE 						AS DATAINS,
				TO_DATE((SELECT MIN(DATA) 
					 	 FROM SALDO_REND 
						 WHERE IDPTF = SALS.IDPTF 
						 AND CODICETITOLO = SALS.CODICETITOLO
										), 'YYYYMMDD') 	AS DATAINIZIO,
				0 										AS SOMMAMOV,
				0 										AS SOMMAMOVPOS,
				0 										AS SOMMAMOVNEG,
				null									AS MINDATA,
				null									AS MAXDATA,
				SYSDATE 								AS DATAAGG,
				ABS(NVL(SALS.CTV, 0) - 0)               AS DIFF_EURO	
FROM SQUADRATURE_CTV_SALS SALS
INNER JOIN RAPPORTO R
ON R.IDPTF = SALS.IDPTF
LEFT JOIN MOVIMENTO M
ON M.IDRAPPORTO = R.ID AND M.CODICETITOLO = SALS.CODICETITOLO
        LEFT JOIN CAUSALE C 
          ON M.CAUSALE = C.CODICECAUSALE AND C.FLAGAGGSALDI = 1
INNER JOIN STRUMENTOFINANZIARIO SF 
	ON SALS.CODICETITOLO = SF.CODICETITOLO
INNER JOIN SOGLIESQUAD_CTV SS 
    ON SF.LIVELLO_2 = SS.TIPOLOGIA 
WHERE SF.PERIMETRO_REND = '1'
AND M.IDRAPPORTO IS NULL
;

--Squadrature rientrate che devono essere eliminate
CURSOR SQUADRATURE_CTV_DEL IS
	SELECT 	IDPTF,
			CODICETITOLO
	FROM SQUADRATURE_CTV
	WHERE DATAAGG IS NOT NULL
	AND TRUNC(SYSDATE) - TRUNC(DATAAGG) >= 1;
					
				


TYPE SQUADRATURE_CTV_TYPE IS TABLE OF SQUADRATURE_CTV%ROWTYPE INDEX BY PLS_INTEGER;
TYPE SQUADRATURE_CTV_DEL_TYPE IS TABLE OF SQUADRATURE_CTV_DEL%ROWTYPE INDEX BY PLS_INTEGER;
	
RES_SQUADRATURE_CTV SQUADRATURE_CTV_TYPE;
RES_SQUADRATURE_CTV_DEL SQUADRATURE_CTV_DEL_TYPE;
	
ROWS      PLS_INTEGER := 10000;
	        
I 				NUMBER(38,0):=0;
TOTALE			NUMBER(38,0):=0;
COUNT_DELETED 	NUMBER(38,0):=0;
CHECK_IDX		INTEGER:=0;


BEGIN
	
	OPEN SQUADRATURE_CTV;
		LOOP
			FETCH SQUADRATURE_CTV BULK COLLECT INTO RES_SQUADRATURE_CTV LIMIT ROWS;
				EXIT WHEN RES_SQUADRATURE_CTV.COUNT = 0;  
				
	      I:=0;
	      I:= RES_SQUADRATURE_CTV.COUNT;
	      TOTALE := TOTALE + I;
				
				FORALL J IN RES_SQUADRATURE_CTV.FIRST .. RES_SQUADRATURE_CTV.LAST
				
				MERGE INTO SQUADRATURE_CTV S
						USING
								(SELECT RES_SQUADRATURE_CTV(J).TIPOSTRUM AS TIPOSTRUM,
										RES_SQUADRATURE_CTV(J).CODICECLIENTE AS CODICECLIENTE,
										RES_SQUADRATURE_CTV(J).CODICERAPPORTO AS CODICERAPPORTO,
										RES_SQUADRATURE_CTV(J).TIPO AS TIPO,
										RES_SQUADRATURE_CTV(J).SOTTO_RAPPORTO AS SOTTO_RAPPORTO,
										RES_SQUADRATURE_CTV(J).CODICEBANCA AS CODICEBANCA,
										RES_SQUADRATURE_CTV(J).CODICEAGENZIA AS CODICEAGENZIA,
										RES_SQUADRATURE_CTV(J).STATO AS STATO,
										RES_SQUADRATURE_CTV(J).IDRAPPORTO AS IDRAPPORTO,
										RES_SQUADRATURE_CTV(J).IDPTF AS IDPTF,
										RES_SQUADRATURE_CTV(J).CODICETITOLO AS CODICETITOLO,
										RES_SQUADRATURE_CTV(J).DESCRIZIONETITOLO AS DESCRIZIONETITOLO,
										RES_SQUADRATURE_CTV(J).DATASALDO AS DATASALDO,
										RES_SQUADRATURE_CTV(J).CTV AS CTV,
										RES_SQUADRATURE_CTV(J).VARIAZIONE AS VARIAZIONE,
										RES_SQUADRATURE_CTV(J).SOGLIA_PONDERATA AS SOGLIA_PONDERATA,
										RES_SQUADRATURE_CTV(J).SOGLIA AS SOGLIA,
										RES_SQUADRATURE_CTV(J).DATAINS AS DATAINS,
										RES_SQUADRATURE_CTV(J).DATAINIZIO AS DATAINIZIO,
										RES_SQUADRATURE_CTV(J).SOMMAMOV AS SOMMAMOV,
										RES_SQUADRATURE_CTV(J).SOMMAMOVPOS AS SOMMAMOVPOS,
										RES_SQUADRATURE_CTV(J).SOMMAMOVNEG AS SOMMAMOVNEG,
										RES_SQUADRATURE_CTV(J).MINDATA AS MINDATA,
										RES_SQUADRATURE_CTV(J).MAXDATA AS MAXDATA,
										RES_SQUADRATURE_CTV(J).DATAAGG AS DATAAGG,
										RES_SQUADRATURE_CTV(J).DIFF_EURO AS DIFF_EURO
								 FROM DUAL
								) A
							ON (S.IDRAPPORTO = A.IDRAPPORTO
								AND S.CODICETITOLO = A.CODICETITOLO
								AND S.DATASALDO = A.DATASALDO)				
				WHEN MATCHED THEN UPDATE 
										SET S.TIPOSTRUM = A.TIPOSTRUM,
											S.CODICECLIENTE = A.CODICECLIENTE,
											S.CODICERAPPORTO = A.CODICERAPPORTO,
											S.TIPO = A.TIPO,
											S.SOTTO_RAPPORTO = A.SOTTO_RAPPORTO,
											S.CODICEBANCA = A.CODICEBANCA,
											S.CODICEAGENZIA = A.CODICEAGENZIA,
											S.STATO = A.STATO,
											S.IDPTF = A.IDPTF,
											S.DESCRIZIONETITOLO = A.DESCRIZIONETITOLO,
											S.CTV = A.CTV,
											S.VARIAZIONE = A.VARIAZIONE,
											S.SOGLIA_PONDERATA = A.SOGLIA_PONDERATA,
											S.SOGLIA = A.SOGLIA,
											S.DATAINIZIO = A.DATAINIZIO,
											S.SOMMAMOV = A.SOMMAMOV,
											S.SOMMAMOVPOS = A.SOMMAMOVPOS,
											S.SOMMAMOVNEG = A.SOMMAMOVNEG,
											S.MINDATA = A.MINDATA,
											S.MAXDATA = A.MAXDATA,
											S.DATAAGG = A.DATAAGG,
											S.DIFF_EURO = A.DIFF_EURO
				WHEN NOT MATCHED THEN 
									INSERT (TIPOSTRUM,
											CODICECLIENTE,
											CODICERAPPORTO,
											TIPO,
											SOTTO_RAPPORTO,
											CODICEBANCA,
											CODICEAGENZIA,
											STATO,
											IDRAPPORTO,
											IDPTF,
											CODICETITOLO,
											DESCRIZIONETITOLO,
											DATASALDO,
											CTV,
											VARIAZIONE,
											SOGLIA_PONDERATA,
											SOGLIA,
											DATAINS,
											DATAINIZIO,
											SOMMAMOV,
											SOMMAMOVPOS,
											SOMMAMOVNEG,
											MINDATA,
											MAXDATA,
											DATAAGG,
											DIFF_EURO
											)
									VALUES (A.TIPOSTRUM,
											A.CODICECLIENTE,
											A.CODICERAPPORTO,
											A.TIPO,
											A.SOTTO_RAPPORTO,
											A.CODICEBANCA,
											A.CODICEAGENZIA,
											A.STATO,
											A.IDRAPPORTO,
											A.IDPTF,
											A.CODICETITOLO,
											A.DESCRIZIONETITOLO,
											A.DATASALDO,
											A.CTV,
											A.VARIAZIONE,
											A.SOGLIA_PONDERATA,
											A.SOGLIA,
											A.DATAINS,
											A.DATAINIZIO,
											A.SOMMAMOV,
											A.SOMMAMOVPOS,
											A.SOMMAMOVNEG,
											A.MINDATA,
											A.MAXDATA,
											A.DATAAGG,
											A.DIFF_EURO
										);						
				
				INSERT INTO OUTPUT_PRINT_TABLE VALUES (TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')) || ' Squadrature CTV: ' || I || ' record'); 
		COMMIT;		        
	            
	END LOOP;
	
	CLOSE SQUADRATURE_CTV;
	
	INSERT INTO OUTPUT_PRINT_TABLE VALUES (TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')) || ' Squadrature CTV: ' || TOTALE);
	COMMIT;

	BEGIN

		dbms_stats.gather_table_stats(ownname => sys_context('USERENV', 'CURRENT_SCHEMA'), tabname => 'SQUADRATURE_CTV', degree => 4, estimate_percent=>1); 

	END;
	
	--Elimino squadrature rientrate	
	OPEN SQUADRATURE_CTV_DEL;
		LOOP
			FETCH SQUADRATURE_CTV_DEL BULK COLLECT INTO RES_SQUADRATURE_CTV_DEL LIMIT ROWS;
				EXIT WHEN RES_SQUADRATURE_CTV_DEL.COUNT = 0;  
				
	      I:=0;
	      I:= RES_SQUADRATURE_CTV_DEL.COUNT;
	      COUNT_DELETED := COUNT_DELETED + I;
				
				FORALL J IN RES_SQUADRATURE_CTV_DEL.FIRST .. RES_SQUADRATURE_CTV_DEL.LAST
				
					DELETE FROM SQUADRATURE_CTV DEL
					WHERE DEL.IDPTF = RES_SQUADRATURE_CTV_DEL(J).IDPTF
					AND DEL.CODICETITOLO = RES_SQUADRATURE_CTV_DEL(J).CODICETITOLO;
					
			INSERT INTO OUTPUT_PRINT_TABLE VALUES (TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')) || ' Squadrature CTV eliminate: ' || COUNT_DELETED || ' record'); 
		COMMIT;		        
	            
	END LOOP;
	
	CLOSE SQUADRATURE_CTV_DEL;
		
	INSERT INTO OUTPUT_PRINT_TABLE VALUES (TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')) || ' Squadrature CTV. Squadrature eliminate: ' || I);
	COMMIT;
END;
