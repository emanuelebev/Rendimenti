BEGIN
   
	
	
END;


DECLARE
CURSOR SCARTI_MOVIMENTI_LIBRETTI IS
SELECT   TMP.ROWID, TMP.CODICEBANCA, TMP.CODICE, TMP.CODICEAGENZIA, TMP.CODICERAPPORTO, TMP.TIPORAPPORTO, NVL(TMP.CODICEINTERNO,'LIQ_EUR_LIB') AS CODICEINTERNO, TMP.CAUSALE, TMP.CTVREGOLATO, TMP.CTVMERCATO, 
TMP.CTVREGOLATODIVISA , TMP.CTVMERCATODIVISA, TMP.DIVISA, TMP.QUANTITA, TMP.PREZZOMERCATO, TMP.PREZZO, TMP.RATEOLORDO, TMP.RATEONETTO, TMP.CAMBIO, TMP.DATAORDINE, 
TMP.DATACONTABILE, TMP.DATAVALUTA, TMP.FLAGSTORNO, TMP.CODICESTORNO, TMP.FLAGCANCELLATO, TMP.IMPOSTE, TMP.COMMISSIONI, TMP.DATAAGGIORNAMENTO  
FROM TMP_PFMOV_LIBRETTI TMP
INNER JOIN (SELECT CODICE, 'LIQ_EUR_LIB' AS CODICEINTERNO, CODICERAPPORTO
	  FROM TMP_PFMOV_LIBRETTI TMP
	  GROUP BY CODICE, CODICEINTERNO, CODICERAPPORTO
	  HAVING COUNT(*) >1) A
ON TMP.CODICE = A.CODICE
AND NVL(TMP.CODICEINTERNO, 'LIQ_EUR_LIB')=NVL(A.CODICEINTERNO, 'LIQ_EUR_LIB')
AND TMP.CODICERAPPORTO = A.CODICERAPPORTO;


	TYPE SCARTI_MOVIMENTI_LIBRETTI_TYPE IS TABLE OF SCARTI_MOVIMENTI_LIBRETTI%ROWTYPE INDEX BY PLS_INTEGER;
	
	RES_SCARTI_MOVIMENTI_LIBRETTI SCARTI_MOVIMENTI_LIBRETTI_TYPE;
	
	ROWS      PLS_INTEGER := 10000;
	        
	I 			NUMBER(38,0);
	TOTALE			NUMBER(38,0):=0;
	
	BEGIN
	
		
	OPEN SCARTI_MOVIMENTI_LIBRETTI;
	LOOP
			FETCH SCARTI_MOVIMENTI_LIBRETTI BULK COLLECT INTO RES_SCARTI_MOVIMENTI_LIBRETTI LIMIT ROWS;
				EXIT WHEN RES_SCARTI_MOVIMENTI_LIBRETTI.COUNT = 0;  
				
	      I:=0;
	      I:= RES_SCARTI_MOVIMENTI_LIBRETTI.COUNT;
	      TOTALE := TOTALE + I;
				
				FORALL J IN RES_SCARTI_MOVIMENTI_LIBRETTI.FIRST .. RES_SCARTI_MOVIMENTI_LIBRETTI.LAST		
	
				INSERT   INTO TBL_SCARTI_TMP_PFMOV_LIBRETTI (	CODICEBANCA,       
															CODICE,            
															CODICEAGENZIA,    
															CODICERAPPORTO,    
															TIPORAPPORTO,      
															CODICEINTERNO,     
															CAUSALE,           
															CTVREGOLATO,       
															CTVMERCATO,        
															CTVREGOLATODIVISA, 
															CTVMERCATODIVISA,  
															DIVISA,            
															QUANTITA,          
															PREZZOMERCATO,    
															PREZZO,            
															RATEOLORDO,       
															RATEONETTO,        
															CAMBIO,            
															DATAORDINE,        
															DATACONTABILE,     
															DATAVALUTA,     
															FLAGSTORNO,        
															CODICESTORNO,      
															FLAGCANCELLATO,    
															IMPOSTE,           
															COMMISSIONI,       
															DATAAGGIORNAMENTO, 
															TMSTP,             
															MOTIVO_SCARTO,     
															RIPROPONIBILE
														)
												VALUES (RES_SCARTI_MOVIMENTI_LIBRETTI(J).CODICEBANCA,       
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).CODICE,            
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).CODICEAGENZIA,    
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).CODICERAPPORTO,    
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).TIPORAPPORTO,      
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).CODICEINTERNO,     
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).CAUSALE,           
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).CTVREGOLATO,       
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).CTVMERCATO,        
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).CTVREGOLATODIVISA, 
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).CTVMERCATODIVISA,  
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).DIVISA,            
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).QUANTITA,          
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).PREZZOMERCATO,    
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).PREZZO,            
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).RATEOLORDO,       
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).RATEONETTO,        
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).CAMBIO,            
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).DATAORDINE,        
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).DATACONTABILE,     
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).DATAVALUTA,     
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).FLAGSTORNO,        
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).CODICESTORNO,      
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).FLAGCANCELLATO,    
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).IMPOSTE,           
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).COMMISSIONI,       
														RES_SCARTI_MOVIMENTI_LIBRETTI(J).DATAAGGIORNAMENTO,
														SYSDATE,
														'CHIAVE PRIMARIA "CODICE, CODICEINTERNO, CODICERAPPORTO" DUPLICATA',
														'N'
														);
				
			        COMMIT;		
			        
			        FORALL J IN RES_SCARTI_MOVIMENTI_LIBRETTI.FIRST .. RES_SCARTI_MOVIMENTI_LIBRETTI.LAST
			        	
			        DELETE   FROM TMP_PFMOV_LIBRETTI TMP_DEL
					WHERE TMP_DEL.ROWID = RES_SCARTI_MOVIMENTI_LIBRETTI(J).ROWID;
					
					COMMIT;
			        	
	            
	             INSERT INTO OUTPUT_PRINT_TABLE VALUES (TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')) || ' SCARTI  TMP_PFMOV_LIBRETTI PER CHIAVE (CODICE, CODICEINTERNO, CODICERAPPORTO) DUPLICATA: ' || I || ' RECORD');
			        
	END LOOP;
	CLOSE SCARTI_MOVIMENTI_LIBRETTI;
	
	INSERT INTO OUTPUT_PRINT_TABLE VALUES (TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')) || ' SCARTI  TMP_PFMOV_LIBRETTI PER CHIAVE (CODICE, CODICEINTERNO, CODICERAPPORTO) DUPLICATA: ' || TOTALE);
	COMMIT;
END;