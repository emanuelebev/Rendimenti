DECLARE 

CURSOR SCARTI_STORNO IS
	SELECT  /*+ parallel(8) */ TMP.ROWID, 
			TMP.CODICEBANCA, TMP.CODICE, TMP.CODICEAGENZIA, TMP.CODICERAPPORTO, TMP.TIPORAPPORTO, 
			TMP.CODICEINTERNO, TMP.CAUSALE, TMP.CTVREGOLATO, TMP.CTVMERCATO, TMP.CTVREGOLATODIVISA, 
			TMP.CTVMERCATODIVISA, TMP.DIVISA, TMP.QUANTITA, TMP.PREZZOMERCATO, TMP.PREZZO, TMP.RATEOLORDO, TMP.RATEONETTO, 
			TMP.CAMBIO, TMP.DATAORDINE, TMP.DATACONTABILE, TMP.DATAVALUTA, TMP.FLAGSTORNO, TMP.CODICESTORNO, 
			TMP.FLAGCANCELLATO, TMP.IMPOSTE, TMP.COMMISSIONI, TMP.DATAAGGIORNAMENTO,
			TMP2.CODICE AS VERIFICA_NUMREG_STORNO, 
			TMP2.DATAVALUTA AS DATA_VAL_STORNO_TMP, 
			M.NUMREG, 
			M.DATA AS DATA_VALUTA_MOVIMENTO,
			TMP.IMPOSTA_REST
	FROM TMP_PFMOVIMENTI TMP
	INNER JOIN RAPPORTO R
		ON TMP.CODICERAPPORTO = R.CODICERAPPORTO
	    AND TMP.TIPORAPPORTO = R.TIPO
	    AND TMP.CODICEBANCA = R.CODICEBANCA
	LEFT JOIN TMP_PFMOVIMENTI TMP2 
		ON TMP.CODICESTORNO = TMP2.CODICE
		AND TMP.CODICEINTERNO = TMP2.CODICEINTERNO
		AND TMP.CODICERAPPORTO = TMP2.CODICERAPPORTO
		AND TMP.TIPORAPPORTO = TMP2.TIPORAPPORTO
	LEFT JOIN MOVIMENTO M
		ON TMP.CODICESTORNO = M.NUMREG
		AND M.IDRAPPORTO = R.ID
	WHERE TMP.FLAGSTORNO = '1'
	AND TMP.CODICESTORNO IS NOT NULL
	AND R.TIPO = '15'
	AND (TMP2.CODICE IS NULL AND M.NUMREG IS NULL);

I 				NUMBER(38,0) := 0;
COUNT_SCARTI 	NUMBER :=0;

BEGIN

FOR CUR_ITEM IN SCARTI_STORNO
	
LOOP 
				
	I := I+1;
		

	INSERT INTO TBL_SCARTI_TMP_PFMOVIMENTI (CODICEBANCA,
											CODICE,
											CODICEAGENZIA,
											CODICERAPPORTO,
											TIPORAPPORTO,
											CODICEINTERNO,
											CAUSALE,
											CTVREGOLATO,
											CTVMERCATO,
											CTVREGOLATODIVISA,
											CTVMERCATODIVISA,
											DIVISA,
											QUANTITA,
											PREZZOMERCATO,
											PREZZO,
											RATEOLORDO,
											RATEONETTO,
											CAMBIO,
											DATAORDINE,
											DATACONTABILE,
											DATAVALUTA,
											FLAGSTORNO,
											CODICESTORNO,
											FLAGCANCELLATO,
											IMPOSTE,
											COMMISSIONI,
											DATAAGGIORNAMENTO,
											IMPOSTA_REST,
											TMSTP,
											MOTIVO_SCARTO,
											RIPROPONIBILE       
						)
				  VALUES (
					            CUR_ITEM.CODICEBANCA,
								CUR_ITEM.CODICE,
								CUR_ITEM.CODICEAGENZIA,
								CUR_ITEM.CODICERAPPORTO,
								CUR_ITEM.TIPORAPPORTO,
								CUR_ITEM.CODICEINTERNO,
								CUR_ITEM.CAUSALE,
								CUR_ITEM.CTVREGOLATO,
								CUR_ITEM.CTVMERCATO,
								CUR_ITEM.CTVREGOLATODIVISA,
								CUR_ITEM.CTVMERCATODIVISA,
								CUR_ITEM.DIVISA,
								CUR_ITEM.QUANTITA,
								CUR_ITEM.PREZZOMERCATO,
								CUR_ITEM.PREZZO,
								CUR_ITEM.RATEOLORDO,
								CUR_ITEM.RATEONETTO,
								CUR_ITEM.CAMBIO,
								CUR_ITEM.DATAORDINE,
								CUR_ITEM.DATACONTABILE,
								CUR_ITEM.DATAVALUTA,
								CUR_ITEM.FLAGSTORNO,
								CUR_ITEM.CODICESTORNO,
								CUR_ITEM.FLAGCANCELLATO,
								CUR_ITEM.IMPOSTE,
								CUR_ITEM.COMMISSIONI,
								CUR_ITEM.DATAAGGIORNAMENTO,
								CUR_ITEM.IMPOSTA_REST,
								SYSDATE,
								'MOVIMENTO DA STORNARE NON TROVATO',
								'S');
			            
		  DELETE  /*+ nologging */ FROM TMP_PFMOVIMENTI DEL_TMP_MOV
		  WHERE DEL_TMP_MOV.ROWID = CUR_ITEM.ROWID;
		  
		  COUNT_SCARTI := COUNT_SCARTI + 1;

		IF MOD(I,10000) = 0 THEN
		INSERT INTO OUTPUT_PRINT_TABLE VALUES (TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')) || ' SCARTI MOVIMENTI DI STORNO SU TMP_PFMOVIMENTI - COMMIT ON ROW: '|| I);
		COMMIT; 
		END IF;
				
	END LOOP;
		INSERT INTO OUTPUT_PRINT_TABLE VALUES (TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')) || ' SCARTI MOVIMENTI DI STORNO SU TMP_PFMOVIMENTI. NUMERO RECORD ELABORATI: '|| I);
	COMMIT;
END;