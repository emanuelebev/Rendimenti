DECLARE

CURSOR SCARTI_MOV IS
SELECT /*+ parallel(8) */  M.IDRAPPORTO,
		R.TIPO,
        tc.codice,
		TMP.ROWID,
      	TMP.*
FROM TMP_PFCOSTI TMP
LEFT JOIN MOVIMENTO M
	ON TMP.CODICEMOVIMENTO = M.NUMREG
LEFT JOIN RAPPORTO R
	ON M.IDRAPPORTO = R.ID
	AND TMP.TIPORAPPORTO = R.TIPO
left join tipo_costo tc
	on (case when substr(tmp.codicebanca, 1) != '0' 
		and length(tmp.codicebanca)= 4 then '0' || tmp.codicebanca
		else tmp.codicebanca end) = tc.codice_banca
	and tmp.codicecosto = tc.codice
where (M.idrapporto is null or tc.codice is null);


  I                     	NUMBER(38, 0) := 0;
  SCARTI_IDRAPPORTO_NUMREG 	NUMBER := 0;
  SCARTI_TIPO_COSTO		 	NUMBER := 0;

BEGIN
	
	 
	
	

  FOR CUR_ITEM IN SCARTI_MOV

  LOOP

    I := I + 1;


    IF (CUR_ITEM.IDRAPPORTO IS NULL)
    THEN
      INSERT  
      INTO
        TBL_SCARTI_TMP_PFCOSTI (CODICEBANCA,
								CODICEMOVIMENTO,
								CODICECOSTO,
								IMPORTO,
								FONTE,
								TIPORAPPORTO,
								DATAAGGIORNAMENTO,
								TMSTP,
								MOTIVO_SCARTO,
								RIPROPONIBILE) 
                       VALUES (	CUR_ITEM.CODICEBANCA,
								CUR_ITEM.CODICEMOVIMENTO,
								CUR_ITEM.CODICECOSTO,
								CUR_ITEM.IMPORTO,
								CUR_ITEM.FONTE,
								CUR_ITEM.TIPORAPPORTO,
								CUR_ITEM.DATAAGGIORNAMENTO,
								SYSDATE,
								'CHIAVE ESTERNA "NUMREG/IDRAPPORTO" NON CENSITA',
								'S'
								);
	
	SCARTI_IDRAPPORTO_NUMREG := SCARTI_IDRAPPORTO_NUMREG + 1;
	
	
      DELETE FROM TMP_PFCOSTI DEL_TMP_MOV
      WHERE DEL_TMP_MOV.ROWID = CUR_ITEM.ROWID;
								
	elsif (cur_item.codice is null)	then
	
      INSERT  
      INTO
        TBL_SCARTI_TMP_PFCOSTI (CODICEBANCA,
								CODICEMOVIMENTO,
								CODICECOSTO,
								IMPORTO,
								FONTE,
								TIPORAPPORTO,
								DATAAGGIORNAMENTO,
								TMSTP,
								MOTIVO_SCARTO,
								RIPROPONIBILE) 
                       VALUES (	CUR_ITEM.CODICEBANCA,
								CUR_ITEM.CODICEMOVIMENTO,
								CUR_ITEM.CODICECOSTO,
								CUR_ITEM.IMPORTO,
								CUR_ITEM.FONTE,
								CUR_ITEM.TIPORAPPORTO,
								CUR_ITEM.DATAAGGIORNAMENTO,
								SYSDATE,
								'CHIAVE ESTERNA "CODICE_COSTO" NON CENSITA',
								'S'
								);
								
	SCARTI_TIPO_COSTO := SCARTI_TIPO_COSTO + 1;
	
	
      DELETE FROM TMP_PFCOSTI DEL_TMP_MOV
      WHERE DEL_TMP_MOV.ROWID = CUR_ITEM.ROWID;
	
	end if;


    IF MOD(I, 10000) = 0
    THEN
      INSERT INTO OUTPUT_PRINT_TABLE VALUES (TO_NUMBER(TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')) || ' SCARTI TMP_PFCOSTI PER CHIAVE ESTERNA NON CENSITA - COMMIT ON ROW: ' || I);
      COMMIT;
    END IF;

  END LOOP;
  
  INSERT INTO OUTPUT_PRINT_TABLE VALUES (TO_NUMBER(TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')) || ' SCARTI TMP_PFCOSTI PER CHIAVE ESTERNA NON CENSITA. NUMERO RECORD ELABORATI: '|| I);
  INSERT INTO OUTPUT_PRINT_TABLE VALUES (TO_NUMBER(TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')) || ' SCARTI TMP_PFCOSTI FK NON CENSITA (NUMREG/IDRAPPORTO): ' || SCARTI_IDRAPPORTO_NUMREG);
  INSERT INTO OUTPUT_PRINT_TABLE VALUES (TO_NUMBER(TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')) || ' SCARTI TMP_PFCOSTI FK NON CENSITA (TIPO_COSTO): ' || SCARTI_TIPO_COSTO);
  
  COMMIT;
END;