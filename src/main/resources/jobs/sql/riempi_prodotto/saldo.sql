
DECLARE
	i INTEGER;
BEGIN
	
	EXECUTE IMMEDIATE 'TRUNCATE TABLE SALDO DROP STORAGE';
	
	SELECT COUNT(*) INTO i FROM user_indexes WHERE index_name = 'RAP_PTF_IDX';
	IF i = 0 THEN
		EXECUTE IMMEDIATE 'CREATE UNIQUE INDEX RAP_PTF_IDX ON RAPPORTO(IDPTF) TABLESPACE RENDIMPC_INDEX  PARALLEL 8';
			EXECUTE IMMEDIATE 'ALTER INDEX RAP_PTF_IDX NOPARALLEL';
	END IF;
	COMMIT;
	
	SELECT COUNT(*) INTO i FROM user_indexes WHERE index_name = 'TMP_SAL_IDX_J';
	IF i = 0 THEN
		EXECUTE IMMEDIATE 'CREATE INDEX TMP_SAL_IDX_J ON TMP_PFSALDI(CODICERAPPORTO,TIPORAPPORTO) TABLESPACE RENDIMPC_INDEX  PARALLEL 8';
			EXECUTE IMMEDIATE 'ALTER INDEX TMP_SAL_IDX_J NOPARALLEL';
	END IF;
	COMMIT;
	
	SELECT COUNT(*) INTO i FROM user_indexes WHERE index_name = 'RAPP_TMPSAL_IDX';
	IF i = 0 THEN
	   EXECUTE IMMEDIATE 'CREATE INDEX RAPP_TMPSAL_IDX ON RAPPORTO("CODICERAPPORTO","TIPO") TABLESPACE TBS_RENDIMPC_IDX_TEMP PARALLEL 8';
			EXECUTE IMMEDIATE 'ALTER INDEX RAPP_TMPSAL_IDX NOPARALLEL';
	END IF;
	COMMIT;
	
	SELECT COUNT(*) INTO i FROM user_indexes WHERE index_name = 'FK_SALDO_PORTAFOGLIO_IDX';
	IF i = 1 THEN
		EXECUTE IMMEDIATE 'DROP INDEX FK_SALDO_PORTAFOGLIO_IDX';
	END IF;
	COMMIT;
	
	SELECT COUNT(*) INTO i FROM USER_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_SALDO_PORTAFOGLIO';
	IF i = 1 THEN
		EXECUTE IMMEDIATE 'ALTER TABLE SALDO DROP CONSTRAINT FK_SALDO_PORTAFOGLIO';
	END IF;
	COMMIT; 
	
	SELECT COUNT(*) INTO i FROM USER_CONSTRAINTS WHERE CONSTRAINT_NAME = 'SALDI_PK';
	IF i = 1 THEN
		EXECUTE IMMEDIATE 'ALTER TABLE SALDO DROP CONSTRAINT SALDI_PK';
	END IF;
	COMMIT; 
	
    
    dbms_stats.gather_table_stats(ownname => sys_context('USERENV', 'CURRENT_SCHEMA'), tabname => 'TMP_PFSALDI', degree => 4, estimate_percent=>1);
    dbms_stats.gather_table_stats(ownname => sys_context('USERENV', 'CURRENT_SCHEMA'), tabname => 'SALDO', degree => 4, estimate_percent=>1);
    dbms_stats.gather_table_stats(ownname => sys_context('USERENV', 'CURRENT_SCHEMA'), tabname => 'RAPPORTO', degree => 4, estimate_percent=>1);
    
	INSERT /*+APPEND NOLOGGING PARALLEL(8)*/ INTO SALDO (IDPTF,CODICETITOLO,DATA,VALORE,PMC,CMC,CTV,CTVVALUTA,DATAAGGIORNAMENTO,DATASCADENZA,DATAACQUISTO)
	SELECT  R.IDPTF,
	CASE WHEN Z.TIPORAPPORTO='01' THEN 'LIQ_EUR' ELSE (CASE WHEN Z.TIPORAPPORTO='02' THEN 'LIQ_EUR_LIB' ELSE Z.CODICEINTERNO END) END,
	Z.DATASALDO,
	CASE WHEN Z.TIPORAPPORTO='02' THEN Z.CONTROVALORE_VINCOLATO ELSE Z.QUANTITA END,
	0,
	0,
	CASE WHEN Z.CONTROVALORE < 0 THEN 0 WHEN Z.TIPORAPPORTO='01' THEN Z.CONTROVALORE+NVL(Z.CONTROVALORE_VINCOLATO, 0) ELSE Z.CONTROVALORE END,
	CASE WHEN Z.CONTROVALORE < 0 THEN 0 WHEN Z.TIPORAPPORTO='01' THEN Z.CONTROVALORE+NVL(Z.CONTROVALORE_VINCOLATO, 0) ELSE Z.CONTROVALORE END,
	TO_CHAR(SYSDATE,'yyyymmdd'),
	Z.DATASCADENZA,
	Z.DATASOTTOSCRIZIONE
	FROM  RAPPORTO R inner join TMP_PFSALDI Z 
	on( R.CODICERAPPORTO=Z.CODICERAPPORTO 
	--AND R.CODICEAGENZIA=Z.CODICEAGENZIA
	AND R.TIPO=Z.TIPORAPPORTO)
	AND EXISTS (SELECT 1 FROM STRUMENTOFINANZIARIO SF WHERE Z.CODICEINTERNO=SF.CODICETITOLO);

	COMMIT;    
	
	SELECT COUNT(*) INTO i FROM user_indexes WHERE index_name = 'TMP_SAL_IDX_J';
	IF i = 1 THEN
		EXECUTE IMMEDIATE 'DROP INDEX TMP_SAL_IDX_J';
	END IF;
	COMMIT;
	
	SELECT COUNT(*) INTO i FROM USER_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_SALDO_PORTAFOGLIO';
	IF i =0 THEN
		EXECUTE IMMEDIATE 'ALTER TABLE SALDO ADD CONSTRAINT FK_SALDO_PORTAFOGLIO FOREIGN KEY (IDPTF) REFERENCES PORTAFOGLIO (ID)';
	END IF;
	COMMIT; 
	
	SELECT COUNT(*) INTO i FROM user_indexes WHERE index_name = 'FK_SALDO_PORTAFOGLIO_IDX';
	IF i = 0 THEN
		EXECUTE IMMEDIATE 'CREATE INDEX FK_SALDO_PORTAFOGLIO_IDX ON SALDO(IDPTF) TABLESPACE RENDIMPC_INDEX  PARALLEL 8';
			EXECUTE IMMEDIATE 'ALTER INDEX FK_SALDO_PORTAFOGLIO_IDX NOPARALLEL';
	END IF;	
	COMMIT; 
	
	SELECT COUNT(*) INTO i FROM user_indexes WHERE index_name = 'SALDI_PK';
	IF i = 0 THEN
		EXECUTE IMMEDIATE 'ALTER TABLE SALDO ADD CONSTRAINT SALDI_PK PRIMARY KEY (IDPTF, CODICETITOLO, DATA) USING INDEX TABLESPACE RENDIMPC_INDEX';
	END IF;	
	COMMIT; 
	
	dbms_stats.gather_table_stats(ownname => sys_context('USERENV', 'CURRENT_SCHEMA'), tabname => 'SALDO', degree => 4, estimate_percent=>15);
	  
END;

